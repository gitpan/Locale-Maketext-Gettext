Locale-Maketext-Gettext change log

2003-04-28
	 1. The first Locale::Maketext::Gettext::Functions is out.
	    It works! ^_*'  Although it cannot deal with real world
	    problems still. ^^;

2003-04-27
	 1. The name of the _AUTO lexicon package is shorten to
	    Locale::Maketext::Gettext::_AUTO.
	 2. Documentation rearrange.

2003-04-27	version 0.06
	Improvements.
	 1. textdomain works for default system locale directories
	    now.  For domains that are not binded with
	    bindtextdomain, it searches the system locale directories
	    to find the MO file.  No test suite is available for this
	    functionality.  I cannot predict what MO files are
	    available in your system locale directories. ^^;  Please
	    report bugs if it does not work.
	 2. Slave package Locale::Maketext::Gettext::_AUTO::L10N is
	    added, in order to process the _AUTO Lexicon seperately.
	    This saves resources when user change the
	    die_for_lookup_failures setting.  Changing
	    die_for_lookup_failures setting won't trigger copying and
	    replacing whole %Lexicon anymore.  As an effect, the
	    cached compiled result of the _AUTO lexicon is preserved
	    and the compilation overhead from Locale::Maketext is
	    greatly reduced.
	 3. read_mo is added to retire the readmo.  Use of readmo is
	    deprecated.  This idea is inspired by the implementation
	    of readmo as "parse_mo" in Locale::Maketext::Lexicon by
	    Autrijus.  There is far too much meta infomation to be
	    returned other than its encoding.  It's not possible to
	    change the API for each new requirement.  To enable
	    sharing of the algorithm used in read_mo with whoever
	    need it, it's necessary to limit its function to read
	    and return the raw data, leaving all the other jobs to
	    its caller.
	 4. For the same reason, caching control is removed from
	    read_mo, too.  read_mo read the MO file and return the
	    %Lexicon only.  It really reads.  Nothing more. ^_*'

2003-04-27	version 0.05
	Bug and documentation fixes.
	 1. New method key_encoding was added.  The _AUTO lexicon is
	    itself not multibyte-safe.  You can specify the encoding
	    of your keys if you are using non-ASCII keys.  This is
	    not a solution, but a workaround.
	 2. New method encode_failure was added.  The default action
	    when encode fails changed from FB_CROAK to FB_DEFAULT.
	    I have changed my mind.  GNU gettext never fails.
	 3. The paragraph about Locale::Maketext::Lexicon at the
	    NOTES section in the documentation is updated.  The
	    paragraph about msgunfmt is removed.
	 4. The README file was updated.
	 5. The strange line "exists ${"$class\::Lexicon"}{$key};" is
	    removed.  That problem seems to be solved.  It is not
	    required anymore.

2003-04-25	version 0.04
	Documentation fixes.  Upgrade is not required if you are
	using version 0.03.

2003-04-25	version 0.03
	Bug fixes.
	 1. Fixed clashing of the die_for_lookup_failures setting
	    from multiple instances.
	 2. Change log is rewritten, to my own format.
	 3. A new racing test suite is added.  The old racing test
	    suite was renamed as t-switching.
	 4. Redundant initialization of $LH->{"LOCALEDIRS"} in
	    bindtextdomain is removed.
	 5. An old line at die_for_lookup_failures which initialize
	    a wrong $LH->{"LOCALE"} is removed.
	 6. Removed 2 incorrect notice in the documentation.  There
	    will not be infinite loops for bindtextdomain and
	    textdomain, whatever value it takes.  Apparently I had
	    made a mistake. ^^;
	 7. Several typos in the comments are fixed.
	 8. Sanity checks to the MO file is moved into readmo().
	    Cache now has a higher precedence than the sanity checks,
	    which conforms with the global design.
	 9. More documentation was added to the SYNOPSIS.
	10. Sanity checks for whether a method is invoked as a static
	    method are added.  Maketext use static variables.  We
	    should not clash them.
	11. As a result of the above, the maketext method is no more
	    static.  It is an instance method, meaning that
	    MyPkg::L10N::en->maketext does not work anymore.
	12. Instance lexicon is initialized in the new method.  I
	    almost forgot it.  Thanks to the test suite. :p

2003-04-25	version 0.02
	Class/object design fixes.
	 1. I did tell the difference from class variables to
	    instance variables.  Forgive me, I had no experience
	    with object-oriented programming at all, not even OO for
	    perl. :p  Just a few Java books.  Anyway, the problem
	    with clashing class variables is fixed.  Most class
	    variables are moved into instance variables.
	 2. Solved the default output encoding problem by using the
	    encoding of the MO file as the default encoding.
	 3. reload_text method is added to purge the MO file cache,
	    so that applications do not need to be restarted when
	    their MO file updates.
         4. MO files of different byte orders are supported now.
	    Big-endian MO files support is added.
	 5. die_for_lookup_failures method was added.  The default
	    behavior changed to "never fails", as GNU gettext does.
	 6. A test suite is added.

2003-04-24	version 0.01
